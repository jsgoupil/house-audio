@model HouseAudio.AudioController.Models.ZoneAndInputs

@using (Html.BeginForm()) {
    @Html.HiddenFor(m => m.Zone)
    <div class="ha-zone" data-zoneid="@Model.Zone.Id">
        <h2>
            <label>@Html.CheckBoxFor(m => m.Zone.On, new { @class = "ha-zone-onoff" }) Zone @Model.Zone.Id</label>
            <select class="ha-zone-input">
                @if (Model.Inputs != null) {
                    <option value="0">Select an input</option>
                    foreach (var input in Model.Inputs)
                    {
                        var selected = Model.Zone.Input != null && Model.Zone.Input.Equals(input);
                        <option value="@input.Id" selected="@selected">@input.Id</option>
                    }
                }
            </select>
            @{
    var mutedText = @Model.Zone.Mute ? "Muted" : "Mute";   
            }
            <input type="button" class="ha-zone-mute" value="@mutedText" data-muted="@Model.Zone.Mute.ToString().ToLower(System.Globalization.CultureInfo.InvariantCulture)" />
        </h2>
    
        <div class="ha-zone-section" data-property="Volume">
            <label>Volume</label>
            <div class="ha-zone-value">@Html.TextBoxFor(m => m.Zone.Volume)</div>
            <div class="ha-zone-slider">@Html.TextBoxFor(m => m.Zone.Volume, new { type = "range", min = 0, max = 100 })</div>
        </div>
        <div class="ha-zone-section" data-property="Bass">
            <label>Bass</label>
            <div class="ha-zone-value">@Html.TextBoxFor(m => m.Zone.Bass)</div>
            <div class="ha-zone-slider">@Html.TextBoxFor(m => m.Zone.Bass, new { type = "range", min = 0, max = 100 })</div>
        </div>
        <div class="ha-zone-section" data-property="Treble">
            <label>Treble</label>
            <div class="ha-zone-value">@Html.TextBoxFor(m => m.Zone.Treble)</div>
            <div class="ha-zone-slider">@Html.TextBoxFor(m => m.Zone.Treble, new { type = "range", min = 0, max = 100 })</div>
        </div>
    </div>
}